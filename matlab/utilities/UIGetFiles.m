function filenames = UIGetFiles(varargin)
% UIGetFiles: get multiple filenames dialog box
% filenames = UIGetFiles(filterSpec,dialogTitle,StartingDirectory)
% Any or all of the parameters have default values
titledef = 'Choose Files';
if (nargin == 0)
	action = 'Initialize';
	Data.Title = titledef;
	Data.Filter = '*';
	Data.CurrentDir = pwd;
elseif (nargin == 1)
	if (~isstr(varargin{1}))
		error('First input needs to be a string');
	end
	switch varargin{1}
	case {'UpFolder','DownFolder','ChangeDir','Add','AddClick','Remove','ChangeFilter','Done','Cancel'}
		action = varargin{1};
		hfig = gcbf;
	otherwise
		action = 'Initialize';
		Data.Filter = varargin{1};
		Data.Title = titledef;
		Data.CurrentDir = pwd;
	end
else
	action = 'Initialize';
	if (isempty(varargin{1}))
		Data.Filter = '*';
	else
		Data.Filter = varargin{1};
	end
	if (isempty(varargin{2}))
		Data.Title = titledef;
	else
		Data.Title = varargin{2};
	end
	if (nargin > 2)
		Data.CurrentDir = deblank(varargin{3});
		if (~strcmp(Data.CurrentDir(end),filesep))
			Data.CurrentDir = [Data.CurrentDir,filesep];
		end
	else
		Data.CurrentDir = pwd;
	end
end

if any(strcmp(action,{'UpFolder','DownFolder','ChangeDir','Add','AddClick','Remove','ChangeFilter','Done','Cancel'}))
	Data = get(hfig,'UserData');
end
switch action
case 'UpFolder'
	olddir = Data.CurrentDir;
	indx = findstr(olddir,filesep);
	if (length(indx) > 1)
		Data.CurrentDir = olddir(1:indx(end-1));
	end
case 'DownFolder'
	stype = get(hfig,'SelectionType');
	if (~strcmp(stype,'open'))
		return
	end
	s = get(Data.FolderListBox,'Value');
	names = get(Data.FolderListBox,'String');
	Data.CurrentDir = [Data.CurrentDir,names{s},filesep];
case 'ChangeDir'
	nd = deblank(get(findobj(hfig,'Tag','DirText'),'String'));
	if (isempty(nd))
		LocalRefresh(hfig);
		return
	end
	if (~strcmp(nd(end),filesep))
		nd = [nd,filesep];
	end
	td = dir(nd);
	if ~isempty(td)
		Data.CurrentDir = nd;
	else
		warndlg({'Path not valid. Old path being used.'});
	end
case {'Add','AddClick'}
	if (strcmp(action,'AddClick'))
		stype = get(hfig,'SelectionType');
		if (~strcmp(stype,'open'))
			return
		end
	end
	s = get(Data.FileListBox,'Value');
	if (isempty(s))
		return
	end
	allnames = get(Data.FileListBox,'String');
	names = allnames(s);
	fullnames = strcat(Data.CurrentDir,names);
	Data.FullNames = [Data.FullNames,fullnames'];
	%allnames = char([Data.FullNames,fullnames]);
	%olen = length(Data.FullNames);
	%newnames = setdiff(allnames(olen+1:end),allnames(1:olen),'rows');
	%Data.FullNames = [Data.FullNames,cellstr(newnames)];
	%Data.Names = [Data.Names,names];
case 'Remove'
	s = get(Data.SelectedListBox,'Value');
	%Data.Names(s) = [];
	Data.FullNames(s) = [];
case 'ChangeFilter'
	Data.Filter = get(findobj(hfig,'Tag','FilterText'),'String');
case 'Done'
	filenames = Data.FullNames;
	uiresume
	delete(hfig);
	return
case 'Cancel'
	filenames = [];
	uiresume
	delete(hfig);
	return
case 'Initialize'
	Data.FullNames = {};
	h0 = figure('Units','points', ...
		'Color',[0.8 0.8 0.8], ...
		'PaperPosition',[0.25 2.5 6 4.5], ...
		'Position',[321 154 515 542], ...
		'Name',Data.Title,...
		'NumberTitle','off',...
		'HandleVisibility','callback',...
		'WindowStyle','modal',...
		'Tag','GetFilesFigure');
	% List boxes
	Data.FolderListBox = uicontrol('Parent',h0, ...
		'Units','normalized', ...
		'BackgroundColor',[1 1 1], ...
		'Position',[0.06 0.65 0.4 0.2], ...
		'String',' ', ...
		'Style','listbox', ...
		'Max',1,...
		'Callback','UIGetFiles DownFolder',...
		'Tag','Folders', ...
		'Value',1);
	Data.FileListBox = uicontrol('Parent',h0, ...
		'Units','normalized', ...
		'BackgroundColor',[1 1 1], ...
		'Position',[0.06    0.15    0.4    0.42], ...
		'String',' ', ...
		'Style','listbox', ...
		'Max',2,...
		'Callback','UIGetFiles AddClick',...
		'Tag','Files', ...
		'Value',1);
	Data.SelectedListBox = uicontrol('Parent',h0, ...
		'Units','normalized', ...
		'BackgroundColor',[1 1 1], ...
		'Position',[0.66 0.15 0.3 0.7], ...
		'String',' ', ...
		'Style','listbox', ...
		'Max',2,...
		'Tag','SelectedFiles', ...
		'Value',1);
	% Buttons
	h1 = uicontrol('Parent',h0, ...
		'Units','normalized', ...
		'Callback','UIGetFiles UpFolder', ...
		'Position',[0.485 0.738 0.097 0.057], ...
		'String','Up', ...
		'Tag','UpFolderButton');
	h1 = uicontrol('Parent',h0, ...
		'Units','normalized', ...
		'Callback','UIGetFiles Add', ...
		'Position',[0.485 0.4 0.153 0.075], ...
		'String','Add', ...
		'Tag','AddButton');
	h1 = uicontrol('Parent',h0, ...
		'Units','normalized', ...
		'Callback','UIGetFiles Remove', ...
		'Enable','off', ...
		'Position',[0.485 0.258 0.153 0.075], ...
		'String','Remove', ...
		'Tag','RemoveButton');
	h1 = uicontrol('Parent',h0, ...
		'Units','normalized', ...
		'Callback','UIGetFiles Cancel', ...
		'Position',[0.66 0.037 0.14 0.075], ...
		'String','Cancel', ...
		'Tag','CancelButton');
	h1 = uicontrol('Parent',h0, ...
		'Units','normalized', ...
		'Callback','UIGetFiles Done', ...
		'Position',[0.82 0.037 0.14 0.075], ...
		'String','OK', ...
		'Tag','OKButton');
	% Edit boxes
	h1 = uicontrol('Parent',h0, ...
		'Units','normalized', ...
		'BackgroundColor',[1 1 1], ...
		'HorizontalAlignment','left', ...
		'Position',[0.058 0.037 0.408 0.05], ...
		'String',Data.Filter, ...
		'Style','edit', ...
		'Callback','UIGetFiles ChangeFilter',...
		'Tag','FilterText');
	h1 = uicontrol('Parent',h0, ...
		'Units','normalized', ...
		'HorizontalAlignment','left', ...
		'Position',[0.058 0.95 0.2 0.03], ...
		'String','Current Directory:  ', ...
		'Style','text', ...
		'Tag','CDText');
	h1 = uicontrol('Parent',h0, ...
		'Units','normalized', ...
		'BackgroundColor',[1 1 1], ...
		'HorizontalAlignment','left', ...
		'Position',[0.26 0.94 0.7 0.05], ...
		'String','', ...
		'Style','edit', ...
		'Callback','UIGetFiles ChangeDir',...
		'Tag','DirText');
	% Strings
	h1 = uicontrol('Parent',h0, ...
		'Units','normalized', ...
		'HorizontalAlignment','left', ...
		'Position',[0.058 0.86 0.188 0.03], ...
		'String','Folders:', ...
		'Style','text', ...
		'Tag','StaticText1');
	h1 = uicontrol('Parent',h0, ...
		'Units','normalized', ...
		'HorizontalAlignment','left', ...
		'Position',[0.058 0.58 0.211 0.03], ...
		'String','Files:', ...
		'Style','text', ...
		'Tag','StaticText2');
	h1 = uicontrol('Parent',h0, ...
		'Units','normalized', ...
		'HorizontalAlignment','left', ...
		'Position',[0.058 0.09 0.248 0.03], ...
		'String','File name filter:', ...
		'Style','text', ...
		'Tag','StaticText3');
	h1 = uicontrol('Parent',h0, ...
		'Units','normalized', ...
		'HorizontalAlignment','left', ...
		'Position',[0.660 0.86 0.2524 0.03], ...
		'String','Selected files:', ...
		'Style','text', ...
		'Tag','StaticText4');
%	h1 = uicontrol('Parent',h0, ...
%		'Units','normalized', ...
%		'HorizontalAlignment','left', ...
%		'Position',[0.058 0.95 0.913 0.03], ...
%		'String','Current Directory:  ', ...
%		'Style','text', ...
%		'Tag','CDText');
	%uiwait;
	hfig = h0;
end %switch
%if any(strcmp(action,{'UpFolder','DownFolder','Add','AddClick','Remove','ChangeFilter','Refresh'}))
set(hfig,'UserData',Data);
LocalRefresh(hfig);
%end



function LocalRefresh(hfig)
Data = get(hfig,'UserData');
% Determine the current directory & get list of files&folders
set(findobj(hfig,'Tag','DirText'),'String',Data.CurrentDir);
d = dir(Data.CurrentDir);
isdir = cat(2,d.isdir);
names = {d.name};
len = length(Data.FullNames);
% Select the folders & put in Folder listbox
set(Data.FolderListBox,'String',names(isdir),'Value',1);
if ~any(isdir)
	set(Data.FolderListBox,'Enable','off');
else
	set(Data.FolderListBox,'Enable','on');
end

% Find the files that have not already been selected
% and put them in the File listbox
d = dir([Data.CurrentDir,Data.Filter]);	% Redo dir using only filtered names
isdir = cat(2,d.isdir);
names = {d.name};
isnotdir = [];
if (~isempty(isdir))
	isnotdir = find(isdir==0);
end
if isempty(isnotdir)
	set(Data.FileListBox,'String',{},'Value',1);
	set(Data.FileListBox,'Enable','off');
	set(findobj(hfig,'Tag','AddButton'),'Enable','off');
else
	filenames = names(isnotdir);
	fullfilenames = strcat(Data.CurrentDir,filenames);
	allnames = char([Data.FullNames,fullfilenames]);
	[newnames,newindx] = setdiff(allnames(len+1:end,:),allnames(1:len,:),'rows');
	if (isempty(newindx))
		set(Data.FileListBox,'Enable','off');
		set(findobj(hfig,'Tag','AddButton'),'Enable','off');
	else
		set(Data.FileListBox,'Enable','on');
		set(findobj(hfig,'Tag','AddButton'),'Enable','on');
	end
	v = get(Data.FileListBox,'Value');
	if (max(v) > length(newindx))
		v = max(1,length(newindx));
	else
		v = max([1,v]);
	end
	set(Data.FileListBox,'Value',v);
	set(Data.FileListBox,'String',filenames(newindx));
end

% For the list of selected files, find the minimum length
% unique specifier for each file, and put those in the
% Selected listbox
% Find all the file separators
fsindx = cell(1,len);
for i = 1:len
	tfsindx = findstr(Data.FullNames{i},filesep);
	if (isempty(tfsindx) | tfsindx(1) ~= 1)
		tfsindx = [1,tfsindx];
	end
	fsindx{i} = tfsindx;
end
% Now cut out the beginning of each full pathname,
% and see if unique. If not, lengthen the pathname
% of the duplicates.
% This could be more efficient, but why bother?
lstindx = zeros(1,len);
% Initialize to the shortest strings
for i = 1:len
	lstindx(i) = length(fsindx{i})+1;
end
dupindx = 1:len;
shortnames = cell(1,len);
while (~isempty(dupindx))
	lstindx(dupindx) = lstindx(dupindx)-1;
	for i = 1:len
		shortnames{i} = Data.FullNames{i}(fsindx{i}(lstindx(i))+1:end);
	end
	[unames,sindx,uindx] = unique(char(shortnames),'rows');
	% Now find the duplicates in uindx
	[suindx,suii] = sort(uindx);
	zi = find(diff(suindx) == 0);
	dupindx = unique([suii(zi),suii(zi+1)]);
end
% Now fill the listbox appropriately
% Do Value first to avoid error
v = get(Data.SelectedListBox,'Value');
if (max(v) > length(shortnames))
	v = max(1,length(shortnames));
else
	v = max([1,v]);
end
set(Data.SelectedListBox,'Value',v);
set(Data.SelectedListBox,'String',shortnames);
if (len == 0)
	set(Data.SelectedListBox,'Enable','off');
	set(findobj(hfig,'Tag','RemoveButton'),'Enable','off');
else
	set(Data.SelectedListBox,'Enable','on');
	set(findobj(hfig,'Tag','RemoveButton'),'Enable','on');
end
