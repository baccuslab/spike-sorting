function [snips,chanOut,I] = GetRandSnips(filename,chan,Iin,sniprange,n)% [snips,chanOut,I] = GetRandSnips(filename,chan,Iin,sniprange,n)% Get random snippets from a file% chan is the sequence of channels from which to take%    the snippets (output by GetSpikeSnippets; assures appropriate distribution)% Iin is the sequence of spike times (avoid these, but choose from same range)% sniprange is the range to grab% n is the approx number of samples% (will be slightly less, after excluding near-misses)%chan = chan+1;	% Undo the change made at output from GetSpikeTimesImax = max(Iin);twidth = 1;[d,h] = loadmc(filename,[0,0.01]);	% Just to read the headertmax = Imax/h.scanrate;nloads = ceil(tmax/twidth);neach = ceil(n/nloads);while (length(chan) < neach)	chan = [chan,chan];endchant = 0;width = sniprange(2)-sniprange(1)+1;snips = zeros(width,0);chanOut = zeros(0,0);I = zeros(0,0);indx = 1;while (t < tmax & t+twidth < h.nscans/h.scanrate)	d = loadmc(filename,[t,t+twidth]);	size(d)	Irand = chooseRandomTimes(size(d,2),neach,sniprange);	Itrans = Irand + round(t*h.scanrate);	Isel = avoidTimes(Itrans,I,1);	% Get a set of times that are not too close to spike times	Itemp = Isel - round(t*h.scanrate);	for i = 1:length(Itemp)		sniptemp = snip(d(chan(i),:),Itemp(i),sniprange);		snips(:,indx+i-1) = sniptemp;	end	t = t+twidth;	I(indx:indx+length(Isel)-1) = Isel;	chanOut(indx:indx+length(Isel)-1) =chan(1:length(Itemp));	indx = indx + length(Isel);endfprintf('Read a total of %d seconds of data for %d random snippets\n',t,size(snips,2));return% First make the chan vector long enough to cover all sampleschan = chan+1;	% Undo the change made at output from GetSpikeTimeswhile (length(chan) < n)	chan = [chan,chan];endImax = max(Iin);Irand = round(Imax*rand(n,1));I = avoidTimes(Irand,Iin,1);	% Get a set of times that are not too close to spike timesI = sort(I);twidth = 1;	% collect data in 1s chunks[d,h] = loadmc(filename,[0,0.01]);	% Just to read the headerwidth = sniprange(2)-sniprange(1)+1;i = 0;j = 1;while (j < length(I))	if (i*twidth*h.scanrate < I(j))		d = loadmc(filename,[i*twidth,(i+1)*twidth]); %Load in new data		i = i+1;	end	sniptemp = snip(d(chan(j),:),I(j)-round((i-1)*twidth*h.scanrate),sniprange);	snips = [snips,sniptemp];	j = j+1;end